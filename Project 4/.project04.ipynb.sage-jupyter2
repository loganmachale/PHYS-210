{"backend_state":"ready","connection_file":"/tmp/xdg-runtime-user/jupyter/kernel-7eb0eda6-66d0-45e2-ba57-9bf25ea57536.json","kernel":"python3","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"celltoolbar":"Create Assignment","language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.10"},"nbgrader":{"__altered":false,"__hash":-203116787,"_root":{"entries":[["size",5],["_root",{"entries":[["__altered",false],["__hash",-404592343],["_root",{"entries":[["__altered",false],["__hash",-679907196],["_root",{"entries":[["__altered",false],["__hash",-651869538],["_root",{"entries":[["size",6],["_root",{"entries":[["size",5],["_root",{"entries":[["__altered",false],["__hash",-1072767477],["_root",{"entries":[["size",6],["_root",{"entries":[["size",1],["_root",{"entries":[["cocalc_minimal_stubs",false]],"ownerID":{}}],["__ownerID",null],["__hash",-335098374],["__altered",false],["cocalc_minimal_stubs",false]],"ownerID":{}}],["__hash",-1062824929],["__altered",false],["cocalc_minimal_stubs",false]],"ownerID":{}}],["cocalc_minimal_stubs",false],["size",5]],"ownerID":{}}],["__ownerID",null],["__hash",250283375],["__altered",false],["cocalc_minimal_stubs",false]],"ownerID":{}}],["__ownerID",null],["__hash",-24045107],["__altered",false],["cocalc_minimal_stubs",false]],"ownerID":{}}],["cocalc_minimal_stubs",false],["size",6]],"ownerID":{}}],["cocalc_minimal_stubs",false],["size",5]],"ownerID":{}}],["cocalc_minimal_stubs",false],["size",5]],"ownerID":{}}],["__hash",57563853],["__altered",false],["cocalc_minimal_stubs",false]],"ownerID":{}},"cocalc_minimal_stubs":false,"size":5}},"trust":true,"type":"settings"}
{"cell_type":"code","end":1669150624801,"id":"e00abf","input":"# Check execution time\nnb_name = \"project04.ipynb\"\ncells_to_time = []\nstop_at = ['cell-extension']\n%run -i time_cells2.py","kernel":"python3","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":true,"grade_id":"cell-optimization0","locked":true,"points":0,"schema_version":3,"solution":false,"task":false}},"no_halt":true,"pos":15,"start":1669150409830,"state":"done","type":"cell"}
{"cell_type":"code","end":1669150625355,"id":"094b1a","input":"# 2. Style: pep8 (see note below regarding use of the Format button to fix many errors)\n#\n# Tests for pep8 returns warnings or errors. You may need to hit 'Save' after making changes for them to take effect.\nnb_name = \"project04.ipynb\"\ncells_to_check = []\nstop_at = ['cell-extension']\n# check_style2.py uses cells_to_check and nb_name\n%run -i check_style2.py","kernel":"python3","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":true,"grade_id":"cell-style","locked":true,"points":5,"schema_version":3,"solution":false,"task":false}},"pos":10,"start":1669150625330,"state":"done","type":"cell"}
{"cell_type":"code","id":"104ffb","input":"# Main code and animation here\n\n# Here is some template code to get you started\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport matplotlib.animation as animation\nfrom itertools import combinations\nfrom IPython.display import HTML\nimport matplotlib\n\n# Do your testing using smaller numbers than these\n# (Running this code as is will take a very long time)\nnpoint = 400\nnframe = 500\nxmin, xmax, ymin, ymax = 0, 1, 0, 1\nDt = 0.00002  # time step\n\n\ndef update_point(num):\n    global x, y, vx, vy\n    print('.', end='')  # Provide progress feedback\n    for i in range(2):\n        dx = Dt * vx\n        dy = Dt * vy\n        x = x + dx\n        y = y + dy\n        indx = np.where((x < xmin) | (x > xmax))\n        indy = np.where((y < ymin) | (y > ymax))\n        vx[indx] = -vx[indx]\n        vy[indy] = -vy[indy]\n\n        xx = np.asarray(list(combinations(x, 2)))\n        yy = np.asarray(list(combinations(y, 2)))\n        # Distances between particles:\n        dd = (xx[:, 0] - xx[:, 1])**2 + (yy[:, 0] - yy[:, 1])**2\n\n    data = np.stack((x, y), axis=-1)\n    im.set_offsets(data)\n\n\nfig, ax = plt.subplots()\nplt.xlim(xmin, xmax)\nplt.ylim(ymin, ymax)\n\nx = np.random.random(npoint)\ny = np.random.random(npoint)\nvx = -500. * np.ones(npoint)\nvy = np.zeros(npoint)\nvx[np.where(x <= 0.5)] = -vx[np.where(x <= 0.5)]\nim = ax.scatter(x, y)\nim.set_sizes([20])\n\nanim = animation.FuncAnimation(fig,\n                               update_point,\n                               nframe,\n                               interval=30,\n                               repeat=False)\nanim.save('collide.webm', extra_args=['-vcodec', 'libvpx'])\nplt.close()\nHTML('<video controls> <source src=\"collide.webm\" ' +\n     'type=\"video/webm\"></video>')\n","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"514989720f51dab882bad6034aabe742","grade":true,"grade_id":"cell-project4-1","locked":false,"points":0,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":1,"state":"done","type":"cell"}
{"cell_type":"code","id":"2a61c3","input":"# 3. Results (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"0bfba331bdaa16e3e38c7f315efdff77","grade":true,"grade_id":"cell-results","locked":false,"points":25,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":12,"state":"done","type":"cell"}
{"cell_type":"code","id":"4b50e8","input":"# B2. New Functionality/Language features (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"f3bfbc592099991ad62d237a378affe1","grade":true,"grade_id":"cell-new_features","locked":false,"points":2,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":17,"state":"done","type":"cell"}
{"cell_type":"code","id":"4c865b","input":"# 5. Code optimization/timing (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"a8a3076187fd64d1224573d70288d2a0","grade":true,"grade_id":"cell-optimization1","locked":false,"points":5,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":16,"state":"done","type":"cell"}
{"cell_type":"code","id":"67e1af","input":"# 1. Code execution (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"5fddc8dcc07404068c6f34898e8762c9","grade":true,"grade_id":"cell-executes","locked":false,"points":20,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":9,"state":"done","type":"cell"}
{"cell_type":"code","id":"6ee385","input":"# 4. Readability (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"f39a7cf08454b2b3946e33e39f851429","grade":true,"grade_id":"cell-readability","locked":false,"points":30,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":13,"state":"done","type":"cell"}
{"cell_type":"code","id":"795909","input":"# OPTIONAL project extension here\n# These can call functions in your code above if desired\n# YOUR CODE HERE\n\n","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"887dd39afb49072de92ec16acce3a808","grade":true,"grade_id":"cell-extension","locked":false,"points":3,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":6,"state":"done","type":"cell"}
{"cell_type":"code","id":"834c9d","input":"# Plots, fits and temperature output line here\n# YOUR CODE HERE\n\n","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"820ed7dba3283f0827ec3906b2aa1bea","grade":true,"grade_id":"cell-project4-2","locked":false,"points":0,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":2,"state":"done","type":"cell"}
{"cell_type":"code","id":"904776","input":"# 5. Plot (grader use only)","kernel":"python3","metadata":{"deletable":false,"nbgrader":{"cell_type":"code","checksum":"5f88731ac323e35ec9219653b4ac085b","grade":true,"grade_id":"cell-plots","locked":false,"points":15,"schema_version":3,"solution":true,"task":false}},"no_halt":true,"pos":14,"state":"done","type":"cell"}
{"cell_type":"markdown","id":"15514b","input":"# Grading cells\nThe cells below marked as \"grade use only\" are created as placeholders so that we can provide a manual grade and comments for each category. \n\nExceptions are the \"2. Style\" test, which has an associated autograder test that you can run to check style and the timing cell \"cell-optimization0\", which you can use to test your code execution time.","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"grading-header","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":8,"type":"cell"}
{"cell_type":"markdown","id":"56f49d","input":"Also note that you can use the Format button while in a code cell to automagically fix most pep8 errors (other than way too long print statements)\n\n![](project02-format.png)","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"87d438","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":11,"type":"cell"}
{"cell_type":"markdown","id":"66831b","input":"_Acknowledgements here:_\n\n","pos":4,"type":"cell"}
{"cell_type":"markdown","id":"b568e1","input":"# Acknowledgements\n\nIn the cell below, please describe the role of **anyone other than yourself** who contributed to the work shown in this notebook.\n\nIts ok to get help from us and classmates! Please get in the habit of acknowledging such contributions.\n\nIf you want to refer to a classmate, please use only their cocalc email-id and not their name - or you could just say something like: \"a classmate gave me the idea to use xxx feature to solve yyy problem.\"\n","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"cf5dfa","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":3,"type":"cell"}
{"cell_type":"markdown","id":"d4ce7b","input":"# PHYS 210 Mini-Project 04\n### Maxwell Boltzmann Distribution\nDue Wed, Nov 30, 2022 - 9am","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"0c2615","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":0,"type":"cell"}
{"cell_type":"markdown","id":"eaa3ff","input":"_In this cell, please describe any new language features or project extension you have implemented:_\n\n\n","pos":7,"type":"cell"}
{"cell_type":"markdown","id":"f32902","input":"# Extension Code and Description\nAll solution code for the main project question should appear in the two main cells above above. Project extensions go in the cell \"cell-extension\" immediately below and the descriptions of your extension go in the cell below that.","metadata":{"deletable":false,"editable":false,"nbgrader":{"grade":false,"grade_id":"5a51c40","locked":true,"schema_version":3,"solution":false,"task":false}},"pos":5,"type":"cell"}
{"id":0,"time":1669150870663,"type":"user"}
{"last_load":1669150166046,"type":"file"}